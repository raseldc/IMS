# Generated by Django 4.1.4 on 2023-01-30 11:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomBilling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('description', models.TextField()),
                ('amount', models.FloatField(default=0)),
                ('type', models.CharField(max_length=40)),
                ('custom_date', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=25, unique=True)),
                ('nid', models.CharField(blank=True, max_length=25)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.CharField(max_length=100, unique=True)),
                ('invoice_by', models.CharField(blank=True, max_length=100)),
                ('invoice_for', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('amount', models.FloatField(default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=100, null=True)),
                ('code', models.CharField(default=0, max_length=100)),
                ('engine_no', models.CharField(default=0, max_length=100)),
                ('chassis_no', models.CharField(default=0, max_length=100)),
                ('color', models.CharField(default='Black', max_length=100)),
                ('battery_no', models.CharField(default=0, max_length=100)),
                ('key_no', models.CharField(default=0, max_length=100)),
                ('purchase_price', models.FloatField(blank=True, default=0)),
                ('selling_price', models.FloatField(blank=True, default=0)),
                ('origin', models.CharField(max_length=40, null=True)),
                ('purchase_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('new_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('description', models.TextField(blank=True, default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=100)),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('purchase_price', models.FloatField(blank=True, default=0)),
                ('selling_price', models.FloatField(blank=True, default=0)),
                ('unit', models.IntegerField(blank=True, default=0)),
                ('color', models.CharField(blank=True, default='Black', max_length=50)),
                ('engine', models.CharField(blank=True, default=0, max_length=100)),
                ('chasis_no', models.CharField(blank=True, default=0, max_length=100)),
                ('model', models.CharField(blank=True, default=0, max_length=50)),
                ('type', models.CharField(default='Parts', max_length=50)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductSales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.TextField(null=True)),
                ('products', models.TextField()),
                ('prices', models.CharField(blank=True, max_length=1000)),
                ('quantities', models.CharField(blank=True, max_length=1000)),
                ('dues', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0)),
                ('payment', models.FloatField(default=0)),
                ('invoice', models.CharField(max_length=100, unique=True)),
                ('total', models.FloatField(default=0)),
                ('invoice_by', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('custom_date', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_purchase', models.IntegerField(default=0)),
                ('total_sales', models.IntegerField(default=0)),
                ('total_purchase_due', models.IntegerField(default=0)),
                ('total_sales_due', models.IntegerField(default=0)),
                ('total_expense', models.IntegerField(default=0)),
                ('total_expense_due', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('services', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('total', models.FloatField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=25, unique=True)),
                ('nid', models.CharField(blank=True, max_length=25)),
                ('company_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.TextField(blank=True, null=True)),
                ('prices', models.CharField(blank=True, max_length=1000)),
                ('quantities', models.CharField(blank=True, max_length=1000)),
                ('dues', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0)),
                ('payment', models.FloatField(default=0)),
                ('expires', models.CharField(blank=True, max_length=1000)),
                ('invoice', models.CharField(blank=True, max_length=100, unique=True)),
                ('total', models.FloatField(default=0)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('custom_date', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.customer')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.products')),
            ],
            options={
                'unique_together': {('customer', 'product')},
            },
        ),
    ]
